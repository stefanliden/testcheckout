{"version":3,"file":"force-directed-graph.component.d.ts","sources":["force-directed-graph.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, TemplateRef, EventEmitter } from '@angular/core';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nexport declare class ForceDirectedGraphComponent extends BaseChartComponent {\r\n    force: any;\r\n    forceLink: any;\r\n    legend: boolean;\r\n    legendTitle: string;\r\n    legendPosition: string;\r\n    nodes: any[];\r\n    links: Array<{\r\n        source: any;\r\n        target: any;\r\n    }>;\r\n    activeEntries: any[];\r\n    tooltipDisabled: boolean;\r\n    activate: EventEmitter<any>;\r\n    deactivate: EventEmitter<any>;\r\n    linkTemplate: TemplateRef<any>;\r\n    nodeTemplate: TemplateRef<any>;\r\n    tooltipTemplate: TemplateRef<any>;\r\n    chart: ElementRef;\r\n    colors: ColorHelper;\r\n    dims: ViewDimensions;\r\n    draggingNode: any;\r\n    draggingStart: {\r\n        x: number;\r\n        y: number;\r\n    };\r\n    margin: number[];\r\n    results: any[];\r\n    seriesDomain: any;\r\n    transform: string;\r\n    legendOptions: any;\r\n    groupResultsBy: (node: any) => string;\r\n    update(): void;\r\n    onClick(data: any): void;\r\n    onActivate(event: any): void;\r\n    onDeactivate(event: any): void;\r\n    getSeriesDomain(): any[];\r\n    trackLinkBy(index: any, link: any): any;\r\n    trackNodeBy(index: any, node: any): any;\r\n    setColors(): void;\r\n    getLegendOptions(): {\r\n        scaleType: string;\r\n        domain: any;\r\n        colors: ColorHelper;\r\n        title: string;\r\n        position: string;\r\n    };\r\n    onDragStart(node: any, $event: MouseEvent): void;\r\n    onDrag($event: MouseEvent): void;\r\n    onDragEnd($event: MouseEvent): void;\r\n    escape(label: any): string;\r\n}\r\n"]}