{"version":3,"file":"polar-chart.component.d.ts","sources":["polar-chart.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, TemplateRef } from '@angular/core';\r\nimport { ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nexport declare class PolarChartComponent extends BaseChartComponent {\r\n    legend: boolean;\r\n    legendTitle: string;\r\n    legendPosition: string;\r\n    xAxis: boolean;\r\n    yAxis: boolean;\r\n    showXAxisLabel: boolean;\r\n    showYAxisLabel: boolean;\r\n    xAxisLabel: string;\r\n    yAxisLabel: string;\r\n    autoScale: boolean;\r\n    showGridLines: boolean;\r\n    curve: any;\r\n    activeEntries: any[];\r\n    schemeType: string;\r\n    rangeFillOpacity: number;\r\n    trimYAxisTicks: boolean;\r\n    maxYAxisTickLength: number;\r\n    xAxisTickFormatting: (o: any) => any;\r\n    yAxisTickFormatting: (o: any) => any;\r\n    roundDomains: boolean;\r\n    tooltipDisabled: boolean;\r\n    showSeriesOnHover: boolean;\r\n    gradient: boolean;\r\n    yAxisMinScale: number;\r\n    labelTrim: boolean;\r\n    labelTrimSize: number;\r\n    activate: EventEmitter<any>;\r\n    deactivate: EventEmitter<any>;\r\n    tooltipTemplate: TemplateRef<any>;\r\n    dims: ViewDimensions;\r\n    yAxisDims: ViewDimensions;\r\n    labelOffset: number;\r\n    xDomain: any;\r\n    yDomain: any;\r\n    seriesDomain: any;\r\n    yScale: any;\r\n    xScale: any;\r\n    yAxisScale: any;\r\n    colors: ColorHelper;\r\n    scaleType: string;\r\n    transform: string;\r\n    transformPlot: string;\r\n    transformYAxis: string;\r\n    transformXAxis: string;\r\n    series: any;\r\n    margin: number[];\r\n    xAxisHeight: number;\r\n    yAxisWidth: number;\r\n    filteredDomain: any;\r\n    legendOptions: any;\r\n    thetaTicks: any[];\r\n    radiusTicks: number[];\r\n    outerRadius: number;\r\n    update(): void;\r\n    setDims(): void;\r\n    setScales(): void;\r\n    setTicks(): void;\r\n    getXValues(): any[];\r\n    getXDomain(values?: any[]): any[];\r\n    getYValues(): any[];\r\n    getYDomain(domain?: any[]): any[];\r\n    getSeriesDomain(): any[];\r\n    getXScale(domain: any, width: any): any;\r\n    getYScale(domain: any, height: any): any;\r\n    onClick(data: any, series?: any): void;\r\n    setColors(): void;\r\n    getLegendOptions(): {\r\n        scaleType: string;\r\n        colors: ColorHelper;\r\n        domain: any;\r\n        title: string;\r\n        position: string;\r\n    } | {\r\n        scaleType: string;\r\n        colors: any;\r\n        domain: any;\r\n        title: any;\r\n        position: string;\r\n    };\r\n    updateYAxisWidth({ width }: {\r\n        width: any;\r\n    }): void;\r\n    updateXAxisHeight({ height }: {\r\n        height: any;\r\n    }): void;\r\n    onActivate(item: any): void;\r\n    onDeactivate(item: any): void;\r\n    deactivateAll(): void;\r\n    trackBy(index: any, item: any): any;\r\n}\r\n"]}