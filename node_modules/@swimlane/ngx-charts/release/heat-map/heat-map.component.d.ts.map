{"version":3,"file":"heat-map.component.d.ts","sources":["heat-map.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { TemplateRef, EventEmitter } from '@angular/core';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nexport declare class HeatMapComponent extends BaseChartComponent {\r\n    legend: any;\r\n    legendTitle: string;\r\n    legendPosition: string;\r\n    xAxis: any;\r\n    yAxis: any;\r\n    showXAxisLabel: any;\r\n    showYAxisLabel: any;\r\n    xAxisLabel: any;\r\n    yAxisLabel: any;\r\n    gradient: boolean;\r\n    innerPadding: number | number[];\r\n    trimXAxisTicks: boolean;\r\n    trimYAxisTicks: boolean;\r\n    rotateXAxisTicks: boolean;\r\n    maxXAxisTickLength: number;\r\n    maxYAxisTickLength: number;\r\n    xAxisTickFormatting: any;\r\n    yAxisTickFormatting: any;\r\n    xAxisTicks: any[];\r\n    yAxisTicks: any[];\r\n    tooltipDisabled: boolean;\r\n    tooltipText: any;\r\n    min: any;\r\n    max: any;\r\n    activeEntries: any[];\r\n    activate: EventEmitter<any>;\r\n    deactivate: EventEmitter<any>;\r\n    tooltipTemplate: TemplateRef<any>;\r\n    dims: ViewDimensions;\r\n    xDomain: any[];\r\n    yDomain: any[];\r\n    valueDomain: any[];\r\n    xScale: any;\r\n    yScale: any;\r\n    color: any;\r\n    colors: ColorHelper;\r\n    colorScale: any;\r\n    transform: string;\r\n    rects: any[];\r\n    margin: number[];\r\n    xAxisHeight: number;\r\n    yAxisWidth: number;\r\n    legendOptions: any;\r\n    scaleType: string;\r\n    update(): void;\r\n    getXDomain(): any;\r\n    getYDomain(): any[];\r\n    getValueDomain(): any[];\r\n    /**\r\n     * Converts the input to gap paddingInner in fraction\r\n     * Supports the following inputs:\r\n     *    Numbers: 8\r\n     *    Strings: \"8\", \"8px\", \"8%\"\r\n     *    Arrays: [8,2], \"8,2\", \"[8,2]\"\r\n     *    Mixed: [8,\"2%\"], [\"8px\",\"2%\"], \"8,2%\", \"[8,2%]\"\r\n     *\r\n     * @param {(string | number | Array<string | number>)} value\r\n     * @param {number} [index=0]\r\n     * @param {number} N\r\n     * @param {number} L\r\n     * @returns {number}\r\n     *\r\n     * @memberOf HeatMapComponent\r\n     */\r\n    getDimension(value: string | number | Array<string | number>, index: number, N: number, L: number): number;\r\n    getXScale(): any;\r\n    getYScale(): any;\r\n    getRects(): any[];\r\n    onClick(data: any): void;\r\n    setColors(): void;\r\n    getLegendOptions(): {\r\n        scaleType: string;\r\n        domain: any[];\r\n        colors: any;\r\n        title: string;\r\n        position: string;\r\n    };\r\n    updateYAxisWidth({ width }: {\r\n        width: any;\r\n    }): void;\r\n    updateXAxisHeight({ height }: {\r\n        height: any;\r\n    }): void;\r\n    onActivate(event: any, group: any, fromLegend?: boolean): void;\r\n    onDeactivate(event: any, group: any, fromLegend?: boolean): void;\r\n}\r\n"]}