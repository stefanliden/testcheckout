{"version":3,"file":"gauge.component.d.ts","sources":["gauge.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, AfterViewInit, EventEmitter, TemplateRef } from '@angular/core';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nexport declare class GaugeComponent extends BaseChartComponent implements AfterViewInit {\r\n    legend: boolean;\r\n    legendTitle: string;\r\n    legendPosition: string;\r\n    min: number;\r\n    max: number;\r\n    textValue: string;\r\n    units: string;\r\n    bigSegments: number;\r\n    smallSegments: number;\r\n    results: any[];\r\n    showAxis: boolean;\r\n    startAngle: number;\r\n    angleSpan: number;\r\n    activeEntries: any[];\r\n    axisTickFormatting: any;\r\n    tooltipDisabled: boolean;\r\n    valueFormatting: (value: any) => string;\r\n    showText: boolean;\r\n    margin: any[];\r\n    activate: EventEmitter<any>;\r\n    deactivate: EventEmitter<any>;\r\n    tooltipTemplate: TemplateRef<any>;\r\n    textEl: ElementRef;\r\n    dims: ViewDimensions;\r\n    domain: any[];\r\n    valueDomain: any;\r\n    valueScale: any;\r\n    colors: ColorHelper;\r\n    transform: string;\r\n    outerRadius: number;\r\n    textRadius: number;\r\n    resizeScale: number;\r\n    rotation: string;\r\n    textTransform: string;\r\n    cornerRadius: number;\r\n    arcs: any[];\r\n    displayValue: string;\r\n    legendOptions: any;\r\n    ngAfterViewInit(): void;\r\n    update(): void;\r\n    getArcs(): any[];\r\n    getDomain(): any[];\r\n    getValueDomain(): any[];\r\n    getValueScale(): any;\r\n    getDisplayValue(): string;\r\n    scaleText(repeat?: boolean): void;\r\n    onClick(data: any): void;\r\n    getLegendOptions(): any;\r\n    setColors(): void;\r\n    onActivate(item: any): void;\r\n    onDeactivate(item: any): void;\r\n    isActive(entry: any): boolean;\r\n    trackBy(index: any, item: any): string;\r\n}\r\n"]}