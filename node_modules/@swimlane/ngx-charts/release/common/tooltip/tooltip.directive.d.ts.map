{"version":3,"file":"tooltip.directive.d.ts","sources":["tooltip.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, ViewContainerRef, Renderer2, OnDestroy } from '@angular/core';\r\nimport { PlacementTypes } from './position';\r\nimport { StyleTypes } from './style.type';\r\nimport { AlignmentTypes } from './alignment.type';\r\nimport { ShowTypes } from './show.type';\r\nimport { TooltipService } from './tooltip.service';\r\nexport declare class TooltipDirective implements OnDestroy {\r\n    private tooltipService;\r\n    private viewContainerRef;\r\n    private renderer;\r\n    tooltipCssClass: string;\r\n    tooltipTitle: string;\r\n    tooltipAppendToBody: boolean;\r\n    tooltipSpacing: number;\r\n    tooltipDisabled: boolean;\r\n    tooltipShowCaret: boolean;\r\n    tooltipPlacement: PlacementTypes;\r\n    tooltipAlignment: AlignmentTypes;\r\n    tooltipType: StyleTypes;\r\n    tooltipCloseOnClickOutside: boolean;\r\n    tooltipCloseOnMouseLeave: boolean;\r\n    tooltipHideTimeout: number;\r\n    tooltipShowTimeout: number;\r\n    tooltipTemplate: any;\r\n    tooltipShowEvent: ShowTypes;\r\n    tooltipContext: any;\r\n    tooltipImmediateExit: boolean;\r\n    show: EventEmitter<{}>;\r\n    hide: EventEmitter<{}>;\r\n    private readonly listensForFocus;\r\n    private readonly listensForHover;\r\n    private component;\r\n    private timeout;\r\n    private mouseLeaveContentEvent;\r\n    private mouseEnterContentEvent;\r\n    private documentClickEvent;\r\n    constructor(tooltipService: TooltipService, viewContainerRef: ViewContainerRef, renderer: Renderer2);\r\n    ngOnDestroy(): void;\r\n    onFocus(): void;\r\n    onBlur(): void;\r\n    onMouseEnter(): void;\r\n    onMouseLeave(target: any): void;\r\n    onMouseClick(): void;\r\n    showTooltip(immediate?: boolean): void;\r\n    addHideListeners(tooltip: any): void;\r\n    hideTooltip(immediate?: boolean): void;\r\n    private createBoundOptions;\r\n}\r\n"]}